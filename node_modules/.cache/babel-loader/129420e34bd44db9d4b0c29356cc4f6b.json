{"ast":null,"code":"var _jsxFileName = \"/Users/pradeep/React/weather-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: 0,\n      desc: \"\",\n      icon: \"\",\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Helsinki&units=Metric&APIkey=6fd138d7824444ac43192603e7cd897c\").then(response => response.json()).then(responseData => {\n      this.setState({\n        temp: responseData.main.temp,\n        desc: responseData.weather[0].description,\n        icon: responseData.weather[0].icon,\n        loading: false\n      });\n    }).catch(err => console.error(err));\n  }\n\n  render() {\n    const imgSrc = \"http://openweathermap.org/img/w/\".concat(this.state.icon, \".png\");\n\n    if (this.state.loading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Loading\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Temprature: \", this.state.temp, \" \\xB0C\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Description: \", this.state.desc), React.createElement(\"img\", {\n        src: imgSrc,\n        alt: \"weather icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pradeep/React/weather-app/src/App.js"],"names":["React","Component","App","constructor","props","state","temp","desc","icon","loading","componentDidMount","fetch","then","response","json","responseData","setState","main","weather","description","catch","err","console","error","render","imgSrc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,IAAI,EAAE,EAA3B;AAA+BC,MAAAA,OAAO,EAAE;AAAxC,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,gHADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,YAAY,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAES,YAAY,CAACE,IAAb,CAAkBX,IADZ;AAEZC,QAAAA,IAAI,EAAEQ,YAAY,CAACG,OAAb,CAAqB,CAArB,EAAwBC,WAFlB;AAGZX,QAAAA,IAAI,EAAEO,YAAY,CAACG,OAAb,CAAqB,CAArB,EAAwBV,IAHlB;AAIZC,QAAAA,OAAO,EAAE;AAJG,OAAd;AAMD,KAXH,EAYGW,KAZH,CAYSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAZhB;AAaD;;AACDG,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,6CAAsC,KAAKpB,KAAL,CAAWG,IAAjD,SAAZ;;AACA,QAAI,KAAKH,KAAL,CAAWI,OAAf,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKJ,KAAL,CAAWC,IAA3B,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiB,KAAKD,KAAL,CAAWE,IAA5B,CAFF,EAGE;AAAK,QAAA,GAAG,EAAEkB,MAAV;AAAkB,QAAA,GAAG,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;AACF;;AAjCyB;;AAmC5B,eAAevB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { temp: 0, desc: \"\", icon: \"\", loading: true };\n  }\n  componentDidMount() {\n    fetch(\n      \"http://api.openweathermap.org/data/2.5/weather?q=Helsinki&units=Metric&APIkey=6fd138d7824444ac43192603e7cd897c\"\n    )\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          temp: responseData.main.temp,\n          desc: responseData.weather[0].description,\n          icon: responseData.weather[0].icon,\n          loading: false\n        });\n      })\n      .catch(err => console.error(err));\n  }\n  render() {\n    const imgSrc = `http://openweathermap.org/img/w/${this.state.icon}.png`;\n    if (this.state.loading) {\n      return <p>Loading</p>;\n    } else {\n      return (\n        <div className=\"App\">\n          <p>Temprature: {this.state.temp} Â°C</p>\n          <p>Description: {this.state.desc}</p>\n          <img src={imgSrc} alt=\"weather icon\" />\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}